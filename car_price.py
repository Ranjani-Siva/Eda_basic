# -*- coding: utf-8 -*-
"""Car_Price.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PQeeMj1YfLRLXq5SQpYbuyGlqeujxey5
"""

from google.colab import drive
drive.mount('/content/drive')

"""# **Data Pre processing**"""

import pandas as pd
da=pd.read_csv("/content/drive/MyDrive/Da basic/Eda/Copy of SIVARANJANI M - Car_Price.csv")
da

da.info()

da.info()

da.head()

da.tail()

da.isnull().sum()

#subset the assumption 01 for dependent for price
sub1=da[["fueltype","enginetype","enginesize","fuelsystem","enginelocation","price"]]
sub1

sub1['enginetype'].astype('category').inplace=True
sub1['fueltype'].astype('category')
sub1['fuelsystem'].astype('category')
sub1['enginelocation'].astype('category')
sub1['price'].astype('int64').inplace=True

sub1.info()

"""# Hypothesis"""

#correlation test used for continues attributes comparing dataset engine size and price
sub1['enginesize'].corr(sub1['price'])

#n ANOVA
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import scipy.stats as stats
import os
import statsmodels.api as sm
import statsmodels.stats.multicomp
from statsmodels.formula.api import ols
from statsmodels.stats.anova import anova_lm
from scipy import stats
import seaborn as sns

##enginetype vs price
av1=np.array([sub1["enginetype"]])
av2=np.array([sub1["price"]])

groups=sub1.groupby("enginetype").groups

dohc=sub1['price'][groups['dohc']]
dohcv=sub1['price'][groups['dohcv']]
l=sub1['price'][groups['l']]
ohc=sub1['price'][groups['ohc']]
ohcv=sub1['price'][groups['ohcv']]
ohcf=sub1['price'][groups['ohcf']]
rotor=sub1['price'][groups['rotor']]

p=stats.f_oneway(dohc,dohcv,l,ohc,ohcv,ohcf,rotor)
if p[1]<0.05:
  print("There is a relationship")
else:
  print("No relationship")

#fuelsystem price
av3=np.array([sub1["fuelsystem"]])
av4=np.array([sub1["price"]])

groups=sub1.groupby("fuelsystem").groups

b1=sub1['price'][groups['1bbl']]
b2=sub1['price'][groups['2bbl']]
b3=sub1['price'][groups['4bbl']]
idi=sub1['price'][groups['idi']]
mfi=sub1['price'][groups['mfi']]
mpfi=sub1['price'][groups['mpfi']]
spdi=sub1['price'][groups['spdi']]
spfi=sub1['price'][groups['spfi']]
p=stats.f_oneway(b1,b2,b3,idi,mfi,mpfi,spdi,spfi)
if p[1]<0.05:
  print("There is a relationship")
else:
  print("No relationship")

"""# Univariate"""

#box plot
fig=plt.figure(figsize=(10,8))
b=sub1['price']
plt.boxplot(b)
plt.title('Price of the car(fig 1)')
plt.xlabel('Car')
plt.ylabel('Price')
plt.show()

#Histogram
d=sub1['price']
sns.histplot(d,bins=20,kde=True,color='yellow',edgecolor='black')
plt.xlabel('Rates of car')
plt.ylabel('No of cars')
plt.title("histogram for price with density plot (fig 2)")
plt.show()

"""# Bi Variate"""

#fueltype with price
#bar chart
v1=sub1['fueltype']
v2=sub1['price']
fig=plt.figure(figsize=(10,7))
plt.bar(v1,v2,color='#5464')
plt.xlabel("Fuel Type")
plt.ylabel("Count")
plt.title("The number of cars fuel type (fig 3)")
plt.show()

#enginetype,enginesize,fuelsystem,enginelocation,price
v1=sub1['enginetype']
v2=sub1['price']
fig=plt.figure(figsize=(10,7))
plt.bar(v1,v2,color='#2947')
plt.xlabel("Engine Type")
plt.ylabel("Count")
plt.title("The number of cars in engine type (fig 4)")
plt.show()

#fuelsystem,enginelocation
v1=sub1['fuelsystem']
v2=sub1['price']
fig=plt.figure(figsize=(10,7))
plt.bar(v1,v2,color='#0947',width=0.3)
plt.xlabel("Fuel System")
plt.ylabel("Count")
plt.title("The number of cars in Fuel System (fig 5)")
plt.show()

#enginelocation
v1=sub1['enginelocation']
v2=sub1['price']
fig=plt.figure(figsize=(10,7))
plt.bar(v1,v2,color='#8478',width=0.3)
plt.xlabel("Engine Location on car")
plt.ylabel("Count")
plt.title("The Engine location in car (fig 6)")
plt.show()